{"remote-components":[{"name":"components-core","packageName":"@kne-components/components-core","version":"0.1.12","versions":{"0.1.10":{"version":"0.1.10","fileCount":614,"integrity":"sha512-EfV/HVEZu3rhotB2AIwFkEEZ2B2I8Bl2CX2eKEWIHW0lJa3wdKviCKeZWXTz1jngYwXFdi2octzKBhBqfF9xtA==","shasum":"8adb3d094fc6029482f65b4529612aa41d5c0a3a","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEaWLEvw8hV3XuZX3Q8Hp6FJm6/OXL9uPYC6DSzQ9oGNAiAkpTiCSv42dK+QEFKQA7Iroxs/81wqRIzl2vCucMHtHA=="}],"tarball":"https://registry.npmjs.org/@kne-components/components-core/-/components-core-0.1.10.tgz","unpackedSize":53036820,"time":"2024-02-06T02:12:43.592Z"},"0.1.11":{"version":"0.1.11","fileCount":616,"integrity":"sha512-n7qXROwJXGN/xMTorgluEZoApDljOVu4afrdt8rQEpOa3igsxFZ08SC0w/pvd2Dd4zlTHXUoOB2mgzoSbWGijQ==","shasum":"6be52559b187612aa8bc1b17db2166b4909b9558","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDX1lIx+Jy1Ch9tostSbew3HejBoKGB78m39N0Z57bQwAIgcek79YPtFZu2EsuHm408JqabKff9VVlxeM7TNRfGiMg="}],"tarball":"https://registry.npmjs.org/@kne-components/components-core/-/components-core-0.1.11.tgz","unpackedSize":51906089,"time":"2024-02-07T05:06:30.500Z"},"0.1.12":{"version":"0.1.12","fileCount":616,"integrity":"sha512-bK5CNZoy7IzwLyKDYy/jbpCZYKsSUuG0zz0C1oC/sxecpOAfLYDeFv/zRmWJO0yiIFXIROBinkjWaOK9cxxUZQ==","shasum":"31549f7ac015544fb95eefd699410105b471b364","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBpG4lbHocIx9bh49aYGKXXkQ7VgV6kwtMfTejF6uMsyAiAXx+g+JNQ4bC9Dl+rdrez0nZs8q1IgNZEIW0HJpUYV0g=="}],"tarball":"https://registry.npmjs.org/@kne-components/components-core/-/components-core-0.1.12.tgz","unpackedSize":51907282,"time":"2024-02-07T05:57:13.188Z"}}},{"name":"components-iconfont","packageName":"@kne-components/components-iconfont","version":"0.1.3","versions":{"0.1.3":{"version":"0.1.3","fileCount":331,"integrity":"sha512-KoCjntuUy/UgJA/8Cdv2cLKWP9eGIpsA+bMxAqCCtUjc3/J6jdZXQnrKUCrH9m5YblCCen3dzFPRHRMAly440Q==","shasum":"d83aa47965fae4edbc655e7eed47df724e3213fe","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE9VtiYjAqyXLvlhfuU1pE0xeVKcNueT/o11a7zO7xRVAiEAvh4cxMVYeo96Gci/9DhKlPF3FVZ/iTZt2OBUR9pmSGE="}],"tarball":"https://registry.npmjs.org/@kne-components/components-iconfont/-/components-iconfont-0.1.3.tgz","unpackedSize":20103130,"time":"2024-02-06T02:24:03.163Z"}}}],"miniprograms":[{"name":"mini-core","packageName":"@kne/mini-core","version":"2.0.25","versions":{"2.0.25":{"version":"2.0.25","fileCount":8,"integrity":"sha512-gkFSaMpC5MuN2yHCzb2vCdFhMuYlq3OdNxwjNaZfRAo+ht/fZrdHcDNLIOMT1/80oi8le07C2TF7lDSCCnkyJg==","shasum":"272d4e5f5693e8b0797c29b4f8f0205711c0aa4f","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDnTDF3cPypeUxsyZp2O/gxWmNuk3WbwQsNMN6U52uC1AiEA85EETWfh7ly41EjhBogG07PQ389A2ybBM4CkwpmUMeo="}],"tarball":"https://registry.npmjs.org/@kne/mini-core/-/mini-core-2.0.25.tgz","unpackedSize":1419388,"time":"2024-01-08T03:12:55.534Z"}},"readme":"\n# mini-core\n\n\n### 安装\n\n```shell\nnpm i --save @kne/mini-core\n```\n\n\n### 概述\n\n这里填写组件概要说明\n\n表单控件，自带数据域管理。包含数据录入、校验以及对应样式\n\n\n### 示例\n\n#### 示例代码\n\n- 状态标签\n- 这里填写示例说明\n- miniCore(@kne/mini-core),lodash(lodash)\n\n```jsx\nconst {StateTag} = miniCore;\nconst BaseExample = () => {\n    return <StateTag type=\"primary\">哈哈哈</StateTag>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 警告提示\n- 这里填写示例说明\n- miniCore(@kne/mini-core),lodash(lodash)\n\n```jsx\nconst {Warning} = miniCore;\nconst BaseExample = () => {\n    return <Warning>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</Warning>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 枚举值\n- 展示获取枚举值和批量获取枚举值\n- miniCore(@kne/mini-core)\n\n```jsx\nconst {Enum} = miniCore;\nconst BaseExample = () => {\n    return <Enum loading={null} moduleName=\"degreeEnum\" name={30}/>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 筛选\n- 展示条件筛选器\n- miniCore(@kne/mini-core)\n\n```jsx\nconst {Enum, Filter} = miniCore;\nconst {useState} = React;\n\nconst BaseExample = () => {\n    const [filter, setFilter] = useState({});\n    return <Filter filter={filter} onChange={setFilter}>\n        <Filter.SearchBar name=\"keyword\"/>\n        <Filter.StateBar name=\"state\" items={[{\n            key: 'all', children: '全部'\n        }, {\n            key: 'progress', children: '进展中'\n        }, {\n            key: 'stop', children: '暂停'\n        }, {\n            key: 'close', children: '关闭'\n        }, {\n            key: 'other1', children: '其他1'\n        }, {\n            key: 'other2', children: '其他2'\n        }, {\n            key: 'other3', children: '其他3'\n        }, {\n            key: 'other4', children: '其他4超长超长超长超长'\n        }, {\n            key: 'other5', children: '其他5'\n        }]}/>\n        <Enum loading={null}\n              moduleName={[\"degreeEnum\", \"political\", \"positionStateEnum\"]}>{([degreeEnum, political, positionStateEnum]) => {\n            return <Filter.OptionsBar name=\"option2\" items={[{\n                key: 'city', label: '期望城市', type: 'CitySelect'\n            }, {\n                key: 'currentCity', label: '现居城市', type: 'CitySelect'\n            }, {\n                key: 'function', label: '职能', type: 'FunctionSelect'\n            }, {\n                key: 'industry', label: '行业', type: 'IndustrySelect'\n            }, {\n                key: 'mine', label: '我上传的', type: 'SwitchButton'\n            }, {\n                key: 'positionUser', label: '职位负责人', type: 'UserListSelect', apis: {\n                    getUserList: {\n                        loader: () => {\n                            return {\n                                pageData: degreeEnum.map(({value, description}) => ({\n                                    uid: value, name: description, description\n                                }))\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: 'political', label: '政治面貌', type: \"ListSelect\", api: {\n                    loader: () => {\n                        return {\n                            pageData: political.map(({value, description}) => ({\n                                value, label: description\n                            }))\n                        }\n                    }\n                }\n            }]}/>\n        }}</Enum>\n        <Filter.OptionsBar name=\"option3\" items={[{\n            key: 'city', label: '期望城市', type: 'CitySelect'\n        }, {\n            key: 'currentCity', label: '现居城市', type: 'CitySelect'\n        }]}/>\n    </Filter>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 表单\n- 展示表单组件\n- miniCore(@kne/mini-core),lodash(lodash),antd(@kne/antd-taro)\n\n```jsx\nconst {FormInfo, Global, CommonListTitle} = miniCore;\nconst {range} = lodash;\nconst {Button} = antd;\nconst {useMemo} = React;\n\nconst {\n    FormPart,\n    FormList,\n    Form,\n    Input,\n    SalaryInput,\n    PhoneNumber,\n    CardType,\n    Picker,\n    AdvancedSelect,\n    AutoComplete,\n    CalendarTimeRange,\n    Calendar,\n    CitySelect,\n    IndustrySelect,\n    FunctionSelect,\n    TimeStep,\n    CalendarRange,\n    UserListSelect,\n    InputNumber,\n    InputNumberUnit,\n    Upload,\n    SubmitButton,\n    useFormContext\n} = FormInfo;\n\nconst {useRef} = React;\n\nconst FormInner = () => {\n    const {formData} = useFormContext();\n    console.log('FormInner render');\n    return <FormPart title=\"表单标题\"\n                     list={[<AdvancedSelect.Item name=\"test2\" label=\"高级选择\"\n                                                 interceptor={[\"picker-value\", \"picker-single\"]} rule=\"REQ\"\n                                                 getSearchProps={() => {\n                                                     return {};\n                                                 }} api={{\n                         loader: () => {\n                             return {\n                                 pageData: [{label: \"第一项\", value: 1}, {\n                                     label: \"第二项\", value: 2, disabled: true\n                                 }, {\n                                     label: \"第三项\", value: 3,\n                                 },],\n                             };\n                         }\n                     }}/>, <Input.Item name=\"input\" label=\"输入框\"/>, <SubmitButton>提交</SubmitButton>]}/>;\n};\n\nconst BaseExample = () => {\n    const listRef = useRef();\n    return <Global preset={{\n        apis: {\n            baseURL: 'https://erc.test.fatalent.cn', resume: {\n                ossUpload: {\n                    url: '/api/v1/attachment/upload'\n                }\n            }, user: {\n                getUserList: {\n                    loader: () => {\n                        return {\n                            pageData: range(0, 20).map((index) => ({\n                                uid: index, name: `用户${index}`, description: `用户${index}`\n                            }))\n                        }\n                    }\n                }\n            },\n        }\n    }}>\n        {/*<CommonListTitle subtitle=\"(至少填写一段工作经历)\" extra=\"添加\">工作经历</CommonListTitle>\n        <CommonListTitle subtitle=\"(至少填写一段工作经历)\" isSubheading extra=\"添加\">工作经历</CommonListTitle>*/}\n        <Form data={{\n            'name': \"张三\",\n            'date-range': ['2010-01-01', '2012-01-02'],\n            'test2': {value: 3, label: '第三项'},\n            'city': ['020'],\n            'industry': [\"00100d4\"],\n            'function': [\"001001002\"]\n        }} onSubmit={(data) => {\n            console.log(data);\n        }}>\n            <FormInner/>\n            <FormList title=\"列表\" ref={listRef} name=\"list\" minLength={1}\n                      list={[<Input.Item name=\"name\" label=\"名称\" labelTips=\"哈哈哈哈\"/>, <Input.Item name=\"field0\" label=\"字段\"/>,\n                          <Input.Item name=\"field1\" label=\"字段1\"/>]}/>\n        </Form>\n        {/*<Form data={{\n            'name': \"张三\",\n            'date-range': ['2010-01-01', '2012-01-02'],\n            'test2': [3],\n            'city': ['020'],\n            'industry': [\"00100d4\"],\n            'function': [\"001001002\"]\n        }} onSubmit={(data) => {\n            console.log(data);\n        }}>\n            <FormPart title=\"表单标题\"\n                      list={[<Input.Item label=\"姓名\" name=\"name\" rule=\"REQ LEN-0-10\"/>,\n                          <Picker.DateRangePicker.Item name=\"date-range\" label=\"时间段\"/>,\n                          <PhoneNumber.Item name=\"phone\" label=\"手机\"/>, <CardType.Item name=\"id-card\" label=\"身份证\"/>,\n                          <SalaryInput.Item name=\"salary\" label=\"薪资\" hasMonth typeEnum={({render}) => render([{\n                              description: '年薪', value: 6\n                          }, {description: '月薪', value: 5}, {description: '周薪', value: 4}, {\n                              description: '日薪', value: 3\n                          }, {description: '时薪', value: 2}])}/>,\n                          <AdvancedSelect.Item name=\"test2\" label=\"高级选择\" rule=\"REQ\" getSearchProps={() => {\n                              return {};\n                          }} api={{\n                              loader: () => {\n                                  return {\n                                      pageData: [{label: \"第一项\", value: 1}, {\n                                          label: \"第二项\", value: 2, disabled: true\n                                      }, {\n                                          label: \"第三项\", value: 3,\n                                      },],\n                                  };\n                              }\n                          }}/>, <CitySelect.Item name=\"city\" label=\"城市选择\"/>,\n                          <IndustrySelect.Item name=\"industry\" label=\"行业选择\" multiple/>,\n                          <FunctionSelect.Item name=\"function\" label=\"职能选择\" multiple={false}/>,\n                          <CalendarTimeRange.Item name=\"time\" label=\"面试时间\" rule=\"REQ\"/>,\n                          <InputNumber.Item name=\"number\" label=\"数字\" addonAfter=\"元\" step={2}/>,\n                          <InputNumberUnit.Item name=\"date\" label=\"试用期\"/>,\n                          <Calendar.Item name=\"time2\" label=\"时间\"/>, <TimeStep.Item name=\"timeStep\" label=\"时间2\"/>,\n                          <CalendarRange.Item name=\"time3\" label=\"时间段\"/>,\n                          <CalendarTimeRange.Item name=\"time2\" label=\"面试时间2\" rule=\"REQ\" durationHidden/>,\n                          <UserListSelect.Item name=\"user\" label=\"用户\" rule=\"REQ\"/>,\n                          <Upload.Item name=\"attachment\" label=\"附件\" rule=\"REQ\"/>,\n                          <AutoComplete.Item name=\"school\" label=\"学校\" rule=\"REQ\" api={{\n                              loader: ({data}) => {\n                                  return {\n                                      pageData: [{\n                                          label: \"第一项\" + data.searchText, value: 1\n                                      }, {label: \"第二项\" + data.searchText, value: 2, disabled: true}, {\n                                          label: \"第三项\" + data.searchText, value: 3,\n                                      },],\n                                  };\n                              }\n                          }}/>, <SubmitButton>提交</SubmitButton>]}/>\n            <CommonListTitle subtitle=\"(填写工作经历)\" extra={<Button fill=\"none\" onClick={() => {\n                listRef.current.add();\n            }}>添加</Button>}>工作经历</CommonListTitle>\n            <FormList ref={listRef} name=\"list\" minLength={1}\n                      list={[<Input.Item name=\"name\" label=\"名称\"/>, <Input.Item name=\"field0\" label=\"字段\"/>,\n                          <Input.Item name=\"field1\" label=\"字段1\"/>]}/>\n            <FormList name=\"list2\" title=\"list2\" subtitle=\"副标题\" minLength={1}\n                      itemTitle={({index}) => `第${index + 1}项`}\n                      list={[<Input.Item name=\"name\" label=\"名称\"/>, <Input.Item name=\"field0\" label=\"字段\"/>,\n                          <Input.Item name=\"field1\" label=\"字段1\"/>]}/>\n        </Form>*/}\n    </Global>;\n}\n\nrender(<BaseExample/>);\n\n```\n\n- popup里面的表单\n- 展示popup里面的表单组件\n- miniCore(@kne/mini-core),lodash(lodash),antd(@kne/antd-taro)\n\n```jsx\nconst {FormInfo, HeaderContainer, FixView} = miniCore;\nconst {range} = lodash;\nconst {Button, Popup, NavBar} = antd;\n\nconst {useState} = React;\n\nconst {\n    FormPart,\n    Input,\n    TextArea,\n    CalendarTimeRange,\n    Calendar,\n    CitySelect,\n    FunctionSelect,\n    UserListSelect,\n    SubmitButton,\n    usePopupForm\n} = FormInfo;\n\nconst BaseExample = () => {\n    const popupForm = usePopupForm();\n    return <Button onClick={() => {\n        popupForm({\n            title: '新增表单',\n            formProps: {\n                onSubmit: (data) => {\n                    console.log(data);\n                }\n            },\n            children: <FormPart list={[<Input.Item name=\"name\" label=\"姓名\" rule=\"REQ\"/>,\n                <CalendarTimeRange.Item name=\"time\" label=\"时间\" rule=\"REQ\"/>,\n                <CitySelect.Item name=\"city\" label=\"城市\"/>, <FunctionSelect.Item name=\"function\" label=\"职能\"/>,\n                <TextArea.Item name=\"des\" label=\"说明\"/>]}/>\n        });\n    }}>点击弹出popup</Button>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 高亮\n- 展示搜索高亮\n- miniCore(@kne/mini-core),tarojsComponents(@tarojs/components)\n\n```jsx\nconst {HighLight, HighLightProvider} = miniCore;\nconst {View} = tarojsComponents;\n\nconst BaseExample = () => {\n  return <View>\n    <View>示例1：默认标签</View>\n    <HighLightProvider keyword=\"东北\">\n      <HighLight text=\"我的家在东北，松花江上呀！\"/>\n    </HighLightProvider>\n    <View style={{height: '30px'}}></View>\n    <View>示例2：自定义容器标签</View>\n    <HighLightProvider keyword={[\"项目需求分析\", \"新的技术栈\"]}>\n      <HighLight tagName={View} text=\"工作描述: 参与项目需求分析,业务模块划分↵学习一些新的技术栈↵部分功能模块代码的实现↵对自身完成代码进行简单测试↵对于电商项目的核心业务有一定经验↵后端开发RabbitMQJavaMySQLRedisSpringCloudElasticsearch微服务架构\"/>\n    </HighLightProvider>\n    <View style={{height: '30px'}}></View>\n    <View>示例2：忽略大小写</View>\n    <HighLightProvider keyword={[\"哈尔滨\", \"信息\", \"abs wang\"]}>\n      <HighLight tagName={View} text=\"ABs Wang我的家在东北，松花江上呀！哈尔滨真美，信息通达\"/>\n    </HighLightProvider>\n  </View>\n};\n\nrender(<BaseExample/>);\n```\n\n- 日历\n- 展示日历组件\n- miniCore(@kne/mini-core),antd(@kne/antd-taro),tarojsComponents(@tarojs/components),dayjs(dayjs)\n\n```jsx\nconst {\n    Calendar,\n    CalendarMonthView,\n    CalendarMonthSelector,\n    CalendarMonthSwiper,\n    CalendarWeekTitle,\n    CalendarWeekView,\n    CalendarTimeStepView,\n    CalendarTimeLengthView,\n    CalendarView,\n    CalendarTimeRangeView,\n    CalendarTimeRangePopup,\n    CalendarRangeView,\n    CalendarPopup,\n    CalendarRangePopup,\n    CalendarTimeStepPopup\n} = miniCore;\nconst {Space, Button} = antd;\nconst {useState} = React;\nconst {View} = tarojsComponents;\nconst BaseExample = () => {\n    const [value, onChange] = useState(new Date());\n    const [time, onTimeChange] = useState('09:15');\n    const [timeLength, setTimeLength] = useState(60);\n    const [timeRange, setTimeRange] = useState([new Date(), new Date(Date.now() + 60 * 60 * 1000)]);\n    const [open, setOpen] = useState(false);\n    const [open2, setOpen2] = useState(false);\n    const [open3, setOpen3] = useState(false);\n    const [open4, setOpen4] = useState(false);\n    return <Space direction=\"vertical\">\n        <View>CalendarWeekTitle:展示星期文案</View>\n        <CalendarWeekTitle/>\n        <View>CalendarWeekView:展示一个周日期</View>\n        <CalendarWeekView current={value} onChange={onChange} minDate=\"2020-10-01\" maxDate=\"2030-01-01\"\n                          marks={['2023-10-01', '2023-09-30']}/>\n        <View>CalendarMonthView:展示一个月日期</View>\n        <CalendarMonthView current={value} onChange={onChange} minDate=\"2020-10-01\" maxDate=\"2030-01-01\"\n                           marks={['2023-10-01', '2023-09-30']}/>\n        <View>CalendarTimeStepView:展示一个时间段选择 {time}</View>\n        <View style={{'--picker-height': '400px'}}>\n            <CalendarTimeStepView value={time} onChange={onTimeChange}/>\n        </View>\n        <View>CalendarTimeLengthView:展示一个时长选择 {timeLength}分钟</View>\n        <View style={{'--picker-height': '400px'}}>\n            <CalendarTimeLengthView value={timeLength} onChange={setTimeLength}/>\n        </View>\n        <View>CalendarMonthSelector:展示月份选择</View>\n        <View style={{'--month-selector-height': '200px'}}>\n            <CalendarMonthSelector value={value} minDate=\"2020-10-01\" maxDate=\"2030-01-01\" onChange={onChange}/>\n        </View>\n        <View>CalendarMonthSwiper:展示一个月日期并且可以左右滑动切换月份</View>\n        <CalendarMonthSwiper current={value} onChange={onChange} minDate=\"2020\" maxDate=\"2030-01-01\"\n                             marks={['2023-10-01', '2023-09-30']}/>\n        <View>CalendarView:完整日历视图</View>\n        <View style={{'--month-selector-height': '600px'}}>\n            <CalendarView value={value} onChange={onChange} disabledDate={(date) => {\n                return dayjs(date).format('YYYY-MM-DD') === '2023-09-15';\n            }}/>\n        </View>\n        <View>Calendar:完整日历功能</View>\n        <Calendar\n          value={value}\n          onChange={onChange}\n          extraOptions={<Button size=\"small\">添加</Button>}\n        />\n        <View>CalendarTimeRangeView:时间段选择器 {dayjs(timeRange[0]).format('YYYY-MM-DD HH:mm')}~{dayjs(timeRange[1]).format('YYYY-MM-DD HH:mm')}</View>\n        <CalendarTimeRangeView value={timeRange} startTime=\"15:00\" endTime=\"21:00\" onChange={setTimeRange}/>\n        <View>CalendarRangeView:</View>\n        <CalendarRangeView/>\n        <View>CalendarTimeRangePopup:</View>\n        <Button onClick={() => {\n            setOpen(true);\n        }}>点击弹出</Button>\n        <CalendarTimeRangePopup open={open} onOpenChange={setOpen} value={timeRange} onChange={setTimeRange}/>\n        <View>CalendarPopup:</View>\n        <Button onClick={() => {\n            setOpen2(true);\n        }}>点击弹出</Button>\n        <CalendarPopup open={open2} onOpenChange={setOpen2}/>\n        <View>CalendarRangePopup:</View>\n        <Button onClick={() => {\n            setOpen3(true);\n        }}>点击弹出</Button>\n        <View>CalendarTimeStepPopup:展示一个时间段选择弹窗</View>\n        <Button onClick={() => {\n            setOpen4(true);\n        }}>点击弹出</Button>\n        <CalendarTimeStepPopup open={open4} onOpenChange={setOpen4}/>\n        <CalendarRangePopup open={open3} onOpenChange={setOpen3}/>\n    </Space>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 确认对话框\n- 展示确认对话框\n- miniCore(@kne/mini-core),antd(@kne/antd-taro),tarojsComponents(@tarojs/components)\n\n```jsx\nconst {Modal, ModalButton, useModal} = miniCore;\nconst {useState} = React;\nconst {Button} = antd;\n\nconst ExampleUseModal = () => {\n    const modal = useModal();\n    return <Button onClick={() => {\n        modal({\n            title: '确认解除微信关联？', content: '解除后，将无法直接通过企业微信发起聊天。'\n        });\n    }}>按钮</Button>;\n};\nconst BaseExample = () => {\n    const [open, setOpen] = useState(false);\n    return <>\n        <Button onClick={() => {\n            setOpen(true);\n        }}>按钮</Button>\n        <Modal open={open} onOpenChange={setOpen} title=\"确认解除微信关联？\"\n               content=\"解除后，将无法直接通过企业微信发起聊天。\"/>\n\n        <ModalButton title=\"确认解除微信关联？\" content=\"解除后，将无法直接通过企业微信发起聊天。\">点击弹出</ModalButton>\n        <ExampleUseModal />\n    </>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 信息展示\n- 信息展示\n- miniCore(@kne/mini-core),antd(@kne/antd-taro),tarojsComponents(@tarojs/components)\n\n```jsx\nconst {Content, TipsMessage} = miniCore;\nconst {Button} = antd;\nconst BaseExample = () => {\n  return <Content list={[{\n    label: '测试', content: '哈哈啊哈哈'\n  }, {\n    label: '测试', content: '哈哈啊哈哈', tips: '哈哈哈哈', action: <Button>查看</Button>\n  },{\n    label:'tips',content:<TipsMessage content=\"哈哈哈哈\" title=\"我是一个title\" icon={null}/>\n  }]}/>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 复杂信息展示\n- 复杂信息展示\n- miniCore(@kne/mini-core),antd(@kne/antd-taro),tarojsComponents(@tarojs/components)\n\n```jsx\nconst {InfoPage, Content, Comment, Table} = miniCore;\nconst {Button, Steps, Space} = antd;\nconst BaseExample = () => {\n    return <InfoPage>\n        <InfoPage.Part title=\"开票信息\">\n            <InfoPage.Part>\n                <Content list={[{\n                    label: '开票ID', content: 'IN00001533'\n                }, {\n                    label: '客户名称', content: '自动化测试有限公司'\n                }, {\n                    label: '合同', content: 'onsiteRPO合同', action: <Button>预览</Button>\n                }, {\n                    label: '划转人', block: true, content: <Table dataSource={[{\n                        id: 1, name: '哈哈哈', count: 12\n                    }, {\n                        id: 2, name: '张三张三张三张三张三张三张三张三张三张三张三张三张三张三张三张三张三', count: 200\n                    }]} columns={[{name: 'name', title: '名称'}, {name: 'count', title: '数量'}]}/>\n                }, {\n                    label: '备注', content: null\n                }]}/>\n            </InfoPage.Part>\n            <InfoPage.Part title=\"发票费用信息\">\n                <InfoPage.Part>\n                    发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息\n                </InfoPage.Part>\n                <InfoPage.Part>\n                    <Content list={[{\n                        label: '开票ID', content: 'IN00001533'\n                    }, {\n                        label: '客户名称', content: '自动化测试有限公司'\n                    }, {\n                        label: '合同', content: 'onsiteRPO合同', action: <Button>预览</Button>\n                    }, {\n                        label: '划转人', block: true, content: <Table dataSource={[{\n                            id: 1, name: '哈哈哈', count: 12\n                        }, {\n                            id: 2, name: '张三', count: 200\n                        }]} columns={[{name: 'name', title: '名称'}, {name: 'count', title: '数量'}]}/>\n                    }, {\n                        label: '备注', content: null\n                    }]}/>\n                </InfoPage.Part>\n                <InfoPage.Part>\n                    <Content list={[{\n                        label: '开票ID', content: 'IN00001533'\n                    }, {\n                        label: '客户名称', content: '自动化测试有限公司'\n                    }, {\n                        label: '合同', content: 'onsiteRPO合同', action: <Button>预览</Button>\n                    }, {\n                        label: '划转人', block: true, content: <Table dataSource={[{\n                            id: 1, name: '哈哈哈', count: 12\n                        }, {\n                            id: 2, name: '张三', count: 200\n                        }]} columns={[{name: 'name', title: '名称'}, {name: 'count', title: '数量'}]}/>\n                    }, {\n                        label: '备注', content: null\n                    }]}/>\n                </InfoPage.Part>\n            </InfoPage.Part>\n            <InfoPage.Part title=\"发票信息\">\n                发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息\n            </InfoPage.Part>\n        </InfoPage.Part>\n        <InfoPage.Part title=\"开票信息\">\n            <InfoPage.Part title=\"发票费用信息\">\n                发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息\n            </InfoPage.Part>\n            <InfoPage.Part title=\"发票信息\">\n                发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息发票费用信息\n            </InfoPage.Part>\n        </InfoPage.Part>\n        <InfoPage.Part title=\"开票信息\">\n            <InfoPage.Collapse items={[{\n                key: '1', title: '第一项', children: <Content list={[{\n                    label: '开票ID', content: 'IN00001533', tips: '哈哈哈'\n                }, {\n                    label: '客户名称', content: '自动化测试有限公司'\n                }, {\n                    label: '合同', content: 'onsiteRPO合同', action: <Button>预览</Button>\n                }]}/>\n            }, {\n                key: '2', title: '第二项', children: '第二项第二项第二项第二项第二项第二项第二项第二项'\n            }, {\n                key: '3', title: '第三项', children: '第三项第三项第三项第三项第三项第三项第三项第三项第三项'\n            }]}/>\n        </InfoPage.Part>\n        <InfoPage.Part title=\"审批流程\">\n            <Steps current={2} items={[{\n                title: '第一步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第二步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第三步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第四步', description: '完成时间：2020-12-01 12:30'\n            }]}/>\n            <Steps direction=\"vertical\" current={2} items={[{\n                title: '第一步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第二步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第三步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第四步', description: '完成时间：2020-12-01 12:30'\n            }]}/>\n            <Steps direction=\"vertical\" current={2} items={[{\n                title: '第一步', description: <Space direction=\"vertical\">\n                    <Comment user={{name: '张三'}} time={new Date()}>\n                        评论评论评论评论评论评论评论评论评论评论评论评论评论评论\n                    </Comment>\n                    <Comment user={{name: '张三'}} time={new Date()} action={<Button>撤回</Button>}>\n                        评论评论评论评论评论评论评论评论评论评论评论评论评论评论\n                    </Comment>\n                </Space>\n            }, {\n                title: '第二步', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第三步', status: 'error', description: '完成时间：2020-12-01 12:30'\n            }, {\n                title: '第四步', description: '完成时间：2020-12-01 12:30'\n            }]}/>\n        </InfoPage.Part>\n    </InfoPage>\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 评论\n- 评论\n- miniCore(@kne/mini-core),antd(@kne/antd-taro)\n\n```jsx\nconst {Comment} = miniCore;\nconst {Space, Button} = antd;\n\n\nconst BaseExample = () => {\n    return <Space direction=\"vertical\">\n        <Comment user={{name: '张三'}} time={new Date()}>\n            评论评论评论评论评论评论评论评论评论评论评论评论评论评论\n        </Comment>\n        <Comment user={{name: '张三'}} time={new Date()} action={<Button>撤回</Button>}>\n            评论评论评论评论评论评论评论评论评论评论评论评论评论评论\n        </Comment>\n    </Space>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 弹出页面\n- 弹出页面\n- miniCore(@kne/mini-core),antd(@kne/antd-taro)\n\n```jsx\nconst {usePopupView, FormInfo, FixedView, CommonListTitle, Warning} = miniCore;\nconst {Button} = antd;\n\nconst {\n    Form,\n    FormList,\n    FormPart,\n    Input,\n    TextArea,\n    CalendarTimeRange,\n    CitySelect,\n    IndustrySelect,\n    FunctionSelect,\n    SubmitButton,\n} = FormInfo;\n\nconst {useRef} = React;\n\nconst BaseExample = () => {\n    const popupView = usePopupView();\n    const listRef = useRef();\n    return <Button onClick={() => {\n        const {close} = popupView({\n            className: 'bg-grey', title: '欢迎页面', children: <Form onSubmit={(data) => {\n                console.log(data);\n                close();\n            }}>\n                <Warning>警告提示警告提示警告提示警告提示警告提示警告提示警告提示警告提示警告提示警告提示警告提示</Warning>\n                <FormPart list={[<Input.Item name=\"name\" label=\"姓名\" rule=\"REQ\"/>,\n                    <CalendarTimeRange.Item name=\"time\" label=\"时间\" rule=\"REQ\"/>,\n                    <CitySelect.Item name=\"city\" label=\"城市\"/>, <FunctionSelect.Item name=\"function\" label=\"职能\"/>,\n                    <IndustrySelect.Item name=\"industry\" label=\"行业选择\" multiple/>,\n                    <TextArea.Item name=\"des\" label=\"说明\"/>]}/>\n                <CommonListTitle subtitle=\"(填写工作经历)\" extra={<Button onClick={() => {\n                    listRef.current.add();\n                }}>添加</Button>}>工作经历</CommonListTitle>\n                <FormList ref={listRef} name=\"list\" minLength={1}\n                          list={[<Input.Item name=\"name\" label=\"名称\" labelTips=\"哈哈哈哈哈哈\"/>, <Input.Item name=\"field0\" label=\"字段\"/>,\n                              <Input.Item name=\"field1\" label=\"字段1\"/>]}/>\n                <Button onClick={() => {\n                    popupView({\n                        title: '下一个页面',\n                        children: '下一个页面下一个页面下一个页面下一个页面下一个页面',\n                        hasSafeArea: true,\n                    });\n                }}>点击弹出下一个页面</Button>\n                <FixedView>\n                    <SubmitButton>提交</SubmitButton>\n                </FixedView>\n            </Form>\n        });\n    }}>点击弹出</Button>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 文件预览\n- 文件预览\n- miniCore(@kne/mini-core),antd(@kne/antd-taro)\n\n```jsx\nconst {Global, File} = miniCore;\nconst BaseExample = () => {\n    return <Global preset={{\n        apis: {\n            file: {\n                getFileUrl: {\n                    loader: ({params}) => {\n                        return \"https://attachment.test.fatalent.cn/attachment/Q0ol94kBBZgnCXyZKG1Y.jpg?Expires=1700814537&OSSAccessKeyId=LTAI5tAfbu2aBppB3jMj1kMt&Signature=KcJHlI8FDYMolFQFxacGzhoaA1A%3D\";\n                    }\n                }\n            }\n        }\n    }}>\n        <File value=\"xxxxx\" originalName=\"预览文件.jpg\"/>\n    </Global>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n- 表格\n- 表格\n- miniCore(@kne/mini-core),antd(@kne/antd-taro)\n\n```jsx\nconst {Table} = miniCore;\nconst BaseExample = () => {\n    return <Table dataSource={[{\n        id: 1, name: '哈哈哈', count: 12\n    }, {\n        id: 2, name: '张三', count: 200\n    }]} columns={[{name: 'name', title: '名称'}, {name: 'count', title: '数量'}]}/>;\n};\n\nrender(<BaseExample/>);\n\n```\n\n\n### API\n\n### FormInfo\n\n| 属性名 | 说明 | 类型 | 默认值 |\n|-----|----|----|-----|\n| a   | b  | c  | d   |\n\n"}],"libs":[{"name":"remote-loader","packageName":"@kne-components/remote-loader","version":"1.2.3","versions":{"1.2.3":{"version":"1.2.3","fileCount":49,"integrity":"sha512-/avNF69AU62DCh8EBEb3rREmC66zUdVg1aPJxfHL/RXbEzOJq75qT5bcI1a7931RIGSXEmWRS0iPZxuNwwYZGA==","shasum":"5a84ee4cf4cac440a4b0d2480cb1f3077aee5e1c","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHqciLv01uJMW4QxTsuGZ8uquajA6EeASfaPW/qKRRFHAiEAjLcrfZxz5MQ/dkFZxYWbgNIhY8ePVE6LZil9bL8ygtE="}],"tarball":"https://registry.npmjs.org/@kne-components/remote-loader/-/remote-loader-1.2.3.tgz","unpackedSize":20475624,"time":"2024-02-08T02:21:54.136Z"}}},{"name":"react-form","packageName":"@kne-components/react-form","version":"2.2.2","versions":{"2.2.2":{"version":"2.2.2","fileCount":55,"integrity":"sha512-mLv58bYPkfrR9ccQw5qghxOQFjwTpemQCkx9uxRSkAOegC/QfDmpZspR4FwNH7PZz5vPzDkikVp2QH2WiVLhKQ==","shasum":"8bb637bc6d7a13ede3f77203cc717f324651e51b","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDouYovIV6y1CqyxYU/N3dJpROkX92qvyQ0QkfAsEvl6AiAeyaq7eRl7thFVWp82HU4dmpQGQneUY9rlLk7yE5i19g=="}],"tarball":"https://registry.npmjs.org/@kne-components/react-form/-/react-form-2.2.2.tgz","unpackedSize":20639049,"time":"2024-02-07T03:00:56.439Z"}}},{"name":"react-form-antd","packageName":"@kne-components/react-form-antd","version":"3.1.2","versions":{"3.1.2":{"version":"3.1.2","fileCount":77,"integrity":"sha512-5OUWwERvvk2UsgNXYb6WHDoy4OORbaxXR2Cty5HEXe/ypiFssZDCUGuOSnBPH3oaRhvtRmNkTL7r519zyN6JNQ==","shasum":"b83f8461b003ddda5590726a7aea4417c1a63c21","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEavHkM/vctMsl6gNHiiR6rDxLx1qErQNOgL4xFEud6WAiEAgsYj2Q1gTrglh53RlaMEaA90Cuv/Qwjr5cdUgZLFB9U="}],"tarball":"https://registry.npmjs.org/@kne-components/react-form-antd/-/react-form-antd-3.1.2.tgz","unpackedSize":29118698,"time":"2024-02-07T07:32:47.295Z"}}},{"name":"react-fetch","packageName":"@kne-components/react-fetch","version":"1.4.3","versions":{"1.4.3":{"version":"1.4.3","fileCount":45,"integrity":"sha512-VDUahuEilZiFfSFtyDgtZfh1IL1DGYKluzKzeCGt4hlsAJSw8Rh+nhQ1qH/wDaJ7HK53tE6WB3MAcPfOuE0bHQ==","shasum":"0c1be0d9649cf808e1cb76e2691ca0a1fe0f34a9","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBNvGZ/rS/jrLXr5vk+V/dz4l0h5d3HY3wpooGIEtJCEAiEAz6/0w8BdbtAkspX6gppASDZFSe6rw/EbINasCbZvp6s="}],"tarball":"https://registry.npmjs.org/@kne-components/react-fetch/-/react-fetch-1.4.3.tgz","unpackedSize":20321366,"time":"2024-02-07T10:11:04.792Z"}}},{"name":"react-org-chart","packageName":"@kne-components/react-org-chart","version":"0.1.6","versions":{"0.1.6":{"version":"0.1.6","fileCount":48,"integrity":"sha512-wZta5VINucj455mxN59fkY3MhKAeJannGzmcpCcPRYe3GCTfPtQ+h8UxgZ9RFyHUb9351SvQaGaVf+Wcst/e4A==","shasum":"0ceedd9e2dd820fc0f4042adc6834ce980643d2d","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCEiLbRBX13e2lrvCVbtBiGM6MfoMm2HR54xRxN2MJE6QIhAKfEm9sUwRoWY0SiddaRugnlWo65c9aqTK0MTtkJhoMY"}],"tarball":"https://registry.npmjs.org/@kne-components/react-org-chart/-/react-org-chart-0.1.6.tgz","unpackedSize":19718962,"time":"2024-02-07T08:45:03.986Z"}}},{"name":"use-css-variables","packageName":"@kne-components/use-css-variables","version":"0.1.1","versions":{"0.1.1":{"version":"0.1.1","fileCount":53,"integrity":"sha512-5q6vb7uvYG9fxtqGx8s45RHzAIhZhAxu777bZOJMWb4fEsjvh/X0uvkD3wj88cLNdOxp1j8FeZKdE/0XK9GxFw==","shasum":"fc8621e5339b42ff5b4f18dc3166023ad5697267","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC8hCv94TlH47pHuM6Hx5CFmLHg01AkAWTPrhpKWDSYcAIhAJwN8wl2xHOU++Mcl+B+yP3C2IjxYVRRWN9qsru4lZVd"}],"tarball":"https://registry.npmjs.org/@kne-components/use-css-variables/-/use-css-variables-0.1.1.tgz","unpackedSize":27303342,"time":"2024-02-08T03:11:29.792Z"}}},{"name":"use-click-outside","packageName":"@kne-components/use-click-outside","version":"0.2.1","versions":{"0.2.1":{"version":"0.2.1","fileCount":52,"integrity":"sha512-u+XDpwNbcEmmYUwkASxkQAyT9F0r4QIjxIOHCogB8MsOYS/pZo51e2psfDWFvHOj3x/jZPW1tmopYIkQWzFi1A==","shasum":"424fadc92b588f6cf0295f881ffd9b6fe0fb8ebd","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGUHYvgQT001FiLswL+U0+gQwazgIgY4pwPz5kHjmPK3AiBcEX6YhqDTvmw7/G8DqKcF8v7Cht/MfvGroWuigSvWGg=="}],"tarball":"https://registry.npmjs.org/@kne-components/use-click-outside/-/use-click-outside-0.2.1.tgz","unpackedSize":20316458,"time":"2024-02-08T03:32:30.229Z"}}},{"name":"use-simulation-blur","packageName":"@kne-components/use-simulation-blur","version":"0.1.2","versions":{"0.1.2":{"version":"0.1.2","fileCount":52,"integrity":"sha512-sELIwgipmnzfiaBeYaRAG6ZcS2lrA6/yQivLcQ0dcYxMKah7ZUnjK1JhR55OUU2uFPEoGPOqQmRtdwVxnce7aA==","shasum":"9d4f321346ca4db0125e5f9a1262dafd014676ff","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC1aFl7CqM7EN5X9p4qRrv4IYmb9nNSa8JJnxcTPrxzugIgShgTA4bKeR1EqTt2tBas0xXVjbJ6p0UflR9C307VP3c="}],"tarball":"https://registry.npmjs.org/@kne-components/use-simulation-blur/-/use-simulation-blur-0.1.2.tgz","unpackedSize":20704369,"time":"2024-02-08T03:51:41.872Z"}}},{"name":"react-file-type","packageName":"@kne-components/react-file-type","version":"1.0.6","versions":{"1.0.6":{"version":"1.0.6","fileCount":53,"integrity":"sha512-U1rtHFNtrzgu0mBQdeSuoPz8+nAmmQcrIBRPOuEEaR9zULJJG8LbHjaijq5qxy/he+4RUoJRb4RAf/ACRQjxpw==","shasum":"2454ebef2104b5aaa66a9b2ae9afa58ba56de09a","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD/V+m9Xli2B+2Ub+2qgM7Hin932ehKC0Bur6L4/IgeMQIhAM6e0I0vefxqwHrkqBC+xZte75X5BvlYZtYX39jvU5OZ"}],"tarball":"https://registry.npmjs.org/@kne-components/react-file-type/-/react-file-type-1.0.6.tgz","unpackedSize":20162965,"time":"2024-02-07T10:39:28.762Z"}}}]}
